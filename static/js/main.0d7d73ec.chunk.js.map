{"version":3,"sources":["components/Header.js","context/CategoriasContext.js","context/RecetasContext.js","components/Formulario.js","context/ModalContext.js","components/Receta.js","components/ListaRecetas.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","CategoriasContext","createContext","CategoriasProvider","props","useState","categorias","guardarCategorias","useEffect","a","axios","get","data","drinks","obtenerCategorias","Provider","value","children","RecetasContext","RecetasProvider","recetas","guardarRecetas","nombre","categoria","busqueda","buscarRecetas","consultar","guardarConsultar","agregaCategoria","url","resultado","console","log","obtenerRecetas","Formulario","guardarBusqueda","useContext","obtenerDatosRecetas","e","target","name","onSubmit","preventDefault","type","placeholder","onChange","map","strCategory","ModalContext","ModalProvider","idreceta","guardarIdReceta","informacion","guardarReceta","obtenerReceta","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","breakpoints","down","width","up","palette","background","shadows","spacing","Receta","receta","modalStyle","open","setOpen","classes","strDrink","src","strDrinkThumb","alt","onClick","idDrink","Modal","onClose","style","strInstructions","ingredientes","i","push","uuidv4","mostrarIngredientes","ListaRecetas","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d7d73ec.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <header className=\"bg-alert\">\r\n            <h1>Busca Recetas de Bebidas</h1>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Header;","import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n//Crear el Context\r\nexport const CategoriasContext = createContext();\r\n\r\n//Provider es donde se encuentran las funciones y state\r\nconst CategoriasProvider = (props) => {\r\n    \r\n    //crear el state del Context\r\n    const [ categorias, guardarCategorias ] = useState([]);\r\n\r\n    //ejecutar el llamado a la api\r\n    useEffect(() => {\r\n        const obtenerCategorias = async () => {\r\n            const url = \"https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list\";\r\n\r\n            const categorias = await axios.get(url);\r\n\r\n            guardarCategorias(categorias.data.drinks);\r\n        }\r\n        obtenerCategorias();\r\n    }, [])\r\n\r\n    return (\r\n        <CategoriasContext.Provider\r\n            value={{\r\n                categorias\r\n            }}\r\n        >\r\n            {props.children}\r\n        </CategoriasContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CategoriasProvider;","import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\n\r\nexport const RecetasContext = createContext();\r\n\r\nconst RecetasProvider = (props) => {\r\n\r\n    const [ recetas, guardarRecetas ] = useState([]);\r\n    const [ busqueda, buscarRecetas ] = useState({\r\n        nombre: \"\",\r\n        categoria: \"\"\r\n    });\r\n    const [ consultar, guardarConsultar ] = useState(false);\r\n\r\n    const { nombre, categoria } = busqueda;\r\n\r\n    useEffect(() => {\r\n        if(consultar) {\r\n            const obtenerRecetas = async () => {\r\n                const agregaCategoria = categoria ? (`&c=${categoria}`) : \"\";\r\n                const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nombre}` + agregaCategoria;\r\n    \r\n                const resultado = await axios.get(url);\r\n\r\n                console.log(url);\r\n                //console.log(resultado.data.drinks);\r\n                guardarRecetas(resultado.data.drinks);\r\n            }\r\n            obtenerRecetas();\r\n        }\r\n  \r\n       // eslint-disable-next-line\r\n    }, [busqueda]);\r\n\r\n    return (\r\n        <RecetasContext.Provider\r\n            value={{\r\n                recetas,\r\n                buscarRecetas,\r\n                guardarConsultar\r\n            }}\r\n        >\r\n            {props.children}\r\n        </RecetasContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RecetasProvider;","import React, { useContext, useState } from 'react';\r\nimport { CategoriasContext } from \"../context/CategoriasContext\";\r\nimport { RecetasContext } from \"../context/RecetasContext\";\r\n\r\nconst Formulario = () => {\r\n\r\n    const [ busqueda, guardarBusqueda ] = useState({\r\n        nombre: \"\",\r\n        categoria: \"\"\r\n    });\r\n\r\n    const { categorias } = useContext(CategoriasContext);\r\n    const { buscarRecetas, guardarConsultar } = useContext(RecetasContext);\r\n\r\n    //función para leer los contenidos\r\n    const obtenerDatosRecetas = e => {\r\n\r\n        guardarBusqueda({\r\n            ...busqueda,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <form\r\n            className=\"col-12\"\r\n            onSubmit={e => {\r\n                e.preventDefault();\r\n                buscarRecetas(busqueda)\r\n                guardarConsultar(true);\r\n            }}\r\n        >\r\n            <fieldset className=\"text-center\">\r\n                <legend>Busca bebidas por Categoría o Ingrediente</legend>\r\n            </fieldset>\r\n\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-md-4\">\r\n                    <input \r\n                        name=\"nombre\"\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"Buscar por Ingrediente\"\r\n                        onChange={obtenerDatosRecetas}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <select\r\n                        className=\"form-control\"\r\n                        name=\"categoria\"\r\n                        onChange={obtenerDatosRecetas}\r\n                    >\r\n                        <option value=\"\">-- Selecciona Categoría --</option>\r\n                        {categorias.map(categoria => (\r\n                            <option\r\n                                key={categoria.strCategory} \r\n                                value={categoria.strCategory}\r\n                            >{categoria.strCategory}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-block btn-primary\"\r\n                        value=\"Buscar Bebidas\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Formulario;","import React, { createContext, useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\n\r\n//crear el context\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalProvider = (props) => {\r\n\r\n    //state del provider\r\n    const [ idreceta, guardarIdReceta ] = useState(null);\r\n    const [ informacion, guardarReceta ] = useState({});\r\n\r\n    //una vez que tenemos una receta, llamar a la api\r\n    useEffect(() => {\r\n        const obtenerReceta = async () => {\r\n            if(!idreceta) return;\r\n\r\n            const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idreceta}`;\r\n\r\n            const resultado = await axios.get(url);\r\n\r\n            guardarReceta(resultado.data.drinks[0]);\r\n        }\r\n        obtenerReceta();\r\n    }, [idreceta])\r\n\r\n    return ( \r\n        <ModalContext.Provider\r\n            value={{\r\n                informacion,\r\n                guardarIdReceta,\r\n                guardarReceta\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ModalContext.Provider>\r\n     );\r\n}\r\n \r\nexport default ModalProvider;","import React, { useContext, useState } from 'react';\r\nimport { ModalContext } from \"../context/ModalContext\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 ;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        [theme.breakpoints.down('sm')]: {\r\n          width: '100%',  \r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: 450,  \r\n        },\r\n        maxHeight: 500,\r\n        overflowY: 'auto',\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n}));\r\n\r\nconst Receta = ({receta}) => {\r\n\r\n    //Configuración del modal de material-ui\r\n    const [ modalStyle ] = useState(getModalStyle);\r\n    const [ open, setOpen ] = useState(false);\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    //extraer los valores del context \r\n    const { informacion, guardarIdReceta, guardarReceta } = useContext(ModalContext);\r\n\r\n    //Muestra y formatea los ingredientes\r\n    const mostrarIngredientes = informacion => {\r\n        let ingredientes = [];\r\n        for(let i = 1; i < 16; i++){\r\n            if(informacion[`strIngredient${i}`]) {\r\n                ingredientes.push(\r\n                    <li key={uuidv4()}>{informacion[`strIngredient${i}`]} {informacion[`strMeasure${i}`]}</li>\r\n                )\r\n            }\r\n        }\r\n        return ingredientes;\r\n    }\r\n\r\n    return ( \r\n        <div className=\"col-md-4 mb-3\">\r\n            <div className=\"card\">\r\n                <h2 className=\"card-header\">{receta.strDrink}</h2>\r\n                <img className=\"card-img-top\" src={receta.strDrinkThumb} alt={`Imagen de ${receta.strDrink}`} />\r\n\r\n                <div className=\"card-body\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-block btn-primary\"\r\n                        onClick={() => {\r\n                            guardarIdReceta(receta.idDrink);\r\n                            handleOpen();\r\n                        }}\r\n                    >\r\n                        Ver Receta\r\n                    </button>\r\n\r\n                    <Modal\r\n                        open={open}\r\n                        onClose={() => {\r\n                            guardarIdReceta(null);\r\n                            guardarReceta({});\r\n                            handleClose();\r\n                        }}\r\n                    >\r\n                        <div style={modalStyle} className={classes.paper}>\r\n                            <h2>{informacion.strDrink}</h2>\r\n                            <h3 className=\"mt-4\">Instrucciones</h3>\r\n                            <p>\r\n                                {informacion.strInstructions}\r\n                            </p>\r\n                            <img className=\"img-fluid my-4\" src={informacion.strDrinkThumb} alt={`Imagen de ${receta.strDrink}`} />\r\n                            <h3>Ingredientes y cantidades</h3>\r\n                                <ul>\r\n                                    { mostrarIngredientes(informacion) }\r\n                                </ul>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nReceta.propTypes = {\r\n    receta: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Receta;","import React, { useContext } from 'react';\r\nimport Receta from \"./Receta\";\r\nimport { RecetasContext } from \"../context/RecetasContext\";\r\n\r\nconst ListaRecetas = () => {\r\n\r\n    //extraer las recetas\r\n    const { recetas } = useContext(RecetasContext);\r\n\r\n  \r\n    return ( \r\n        <div className=\"row mt-5\">\r\n            {recetas && recetas.map(receta => {\r\n                return (\r\n                    <Receta \r\n                        key={receta.idDrink}\r\n                        receta={receta}\r\n                    />\r\n                )\r\n            })}\r\n        </div> \r\n    );\r\n}\r\n \r\nexport default ListaRecetas;","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport ListaRecetas from \"./components/ListaRecetas\";\n\nimport CategoriasProvider from \"./context/CategoriasContext\";\nimport RecetasProvider from \"./context/RecetasContext\";\nimport ModalProvider from \"./context/ModalContext\";\n\nfunction App() {\n  return (\n    <CategoriasProvider>\n        <RecetasProvider>\n          <ModalProvider>\n            <Header />\n\n            <div className=\"container mt-5\">\n                <div className=\"row\">\n                  <Formulario />\n                </div>\n                <ListaRecetas />\n            </div>\n          </ModalProvider>\n        </RecetasProvider>  \n    </CategoriasProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}